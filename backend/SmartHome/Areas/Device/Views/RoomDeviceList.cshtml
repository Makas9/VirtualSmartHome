@model SmartHome.ViewModels.RoomDeviceListViewModel
@{
    ViewData["Title"] = "Room Device List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using SmartHome.Models;

<h1>Room Device List</h1>

<a asp-area="Device" asp-controller="Device" asp-action="OpenAddDeviceWindow" asp-route-id="@Model.roomID" >New Device</a> | <a asp-area="Device" asp-controller="Scenario" asp-action="AddScenario">New Scenario</a>
<br />
<ul class="list-group">
    @foreach (var device in Model.Devices)
    {
        <li class="list-group-item">
            @device.Name
            <span class="badge" style="float: right;">
                <div class="custom-control custom-switch">
                    @if (device.State == DeviceState.Off)
                    {
                        <input type="checkbox" class = "custom-control-input">@* not sure ar cia teisingai *@
                        <label class="custom-control-label" for="checkbox" onclick="triggerTurnOn()"></label>
                    }
                    else if (device.State == DeviceState.On)
                    {
                        <input type="checkbox" name="DeviceState" class="custom-control-input" value="@device.Id" checked>
                        <label class="custom-control-label" for="customSwitch1" onclick="triggerTurnOff()"></label>
                    }
                    else
                    {
                        <span>broken</span>
                    }
                </div>
            </span>

        </li>



        <script>
    function triggerTurnOn() {
        var theUrl = '@Url.Action("TurnOn", "Device", new {deviceID = device.Id}, null)';
        window.location = theUrl;
    }
    function triggerTurnOff() {
        var theUrl = '@Url.Action("TurnOff", "Device", new {deviceID = device.Id}, null)';
        window.location = theUrl;
    }
        </script>
    }
</ul>